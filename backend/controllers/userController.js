const User = require('../models/user')
const sendToken = require('../jwtToken')

// Crte new user => /api/v1/product/new
exports.newUser = async (req, res, next) => {
    const user = await User.create(req.body);
    const token = user.getJwtToken();

    // res.status(201).json({
    //     success: true,
    //     token
    // })
    sendToken(user,200,res)

}


exports.getUser = async (req,res, next) => {
    const user = await User.find()

    res.status(200).json({
        success: true,
        user
    })
}

// Login User => /api/v1/Login
exports.loginUser = async (req, res, next) => {
    const {email, password} = req.body;

    // check if email and password is generated by user
    if(!email || !password) {
        return 'wrong passwor or email'
    }

    //Finding user in database
    const user = await User.findOne({email}).select('+password')

    if(!user) {
        return 'Invalid Email or password'
    }

    // check if password is correct or not
    const isPasswordMatch = await user.comparePassword(password);

    if(!isPasswordMatch) {
        return 'Invalid Password'
    }

    // const token = user.getJwtToken()
    // res.status(200).json({
    //     success: true,
    //     token
    // })
    sendToken(user,200,res)
}

// Logout user => /api/v1/Logout
exports.logout = async (req, res, next) =>{
    res.cookie('token', null, {
        expires: new Date(Date.now()),
        httpOnly: true,
    })
    res.status(200).json({
        success:true,
        message: 'LogOut'
    })
}

// Single User => /api/v1/user/:id
exports.userID = async (req, res, next) =>{
    const user = await User.findById(req.params.id);

    res.status(200).json({
        success:true,
        user
    })
}